<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sadowbass.outerpark.infra.mapper.AccountRepositoryMapper">
    <select id="findByEmail" parameterType="string"
            resultType="Account">
        SELECT *
        FROM MEMBERS
        WHERE email = #{email}
    </select>

    <insert id="save" parameterType="Account" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO MEMBERS(email, password, name, nickname, phone, created_date, created_by, modified_date,
                            modified_by)
        VALUES (#{email}, #{password}, #{name}, #{nickname}, #{phone}, #{createdDate}, NULL, #{modifiedDate}, NULL)
    </insert>

    <update id="updateCreateData" parameterType="Account">
        UPDATE MEMBERS
        SET created_by  = #{createdBy},
            modified_by = #{modifiedBy}
        WHERE id = #{id}
    </update>

    <select id="findMyInfoById" parameterType="long" resultType="MyInfo">
        SELECT email, name, nickname, phone
        FROM MEMBERS
        WHERE id = #{id}
    </select>

    <select id="findMyReservationsCount">
        SELECT COUNT(*)
        FROM TICKETS
        <where>
            AND member_id = #{memberId}
            <if test="startDate != null">
                AND created_date >= #{startDate}
            </if>
        </where>
    </select>

    <select id="findMyReservations" resultType="MyTicket">
        SELECT id as id,
        product_name as productName,
        hall_name as hallName,
        round_date_time as roundDateTime,
        seat_name as seatName,
        grade_name as gradeName,
        price as price,
        created_date as reservationDate,
        status as ticketStatus
        FROM TICKETS
        <where>
            AND member_id = #{memberId}
            <if test="startDate != null">
                AND created_date >= #{startDate}
            </if>
        </where>
        ORDER BY created_date DESC
        LIMIT #{page.limit} OFFSET #{page.offset}
    </select>

    <select id="findAllTicketsByMemberIdAndTicketIds" resultType="Ticket">
        SELECT *
        FROM TICKETS
        WHERE member_id = #{memberId}
        AND id IN
        <foreach collection="ticketIds" item="ticketId" separator="," open="(" close=")">
            #{ticketId}
        </foreach>
    </select>

    <update id="cancelTickets">
        UPDATE TICKETS
        SET STATUS='CANCELED',
        modified_date = NOW(),
        modified_by = #{modifiedBy}
        WHERE id IN
        <foreach collection="ticketIds" item="ticketId" separator="," open="(" close=")">
            #{ticketId}
        </foreach>
    </update>
</mapper>